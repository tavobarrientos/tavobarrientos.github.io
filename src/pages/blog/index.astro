---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';
import BlogPostPreview from '../../components/BlogPostPreview.astro';
import SchemaOrg from '../../components/SchemaOrg.astro';
import Pagination from '../../components/Pagination.astro';
import '../../styles/blog.css';

// Number of posts per page
const postsPerPage = 10;

// Get all posts, filter out hidden ones, and sort by date in descending order (newest first)
const allPosts = (await getCollection('blog'))
  .filter(post => !post.data.hidden)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Calculate total number of pages
const totalPosts = allPosts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);

// For the first page, get the first 10 posts
const currentPage = 1;
const posts = allPosts.slice(0, postsPerPage);

// Generate page URLs for metadata
const nextPage = currentPage < totalPages ? `/blog/page/${currentPage + 1}` : null;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="Blog | Gustavo Barrientos" description="Articles and tutorials about software development, Azure, AI and more" />
		<SchemaOrg
			title="Blog | Gustavo Barrientos"
			description="Articles and tutorials about software development, Azure, AI and more"
			type="WebPage"
		/>
		{nextPage && <link rel="next" href={nextPage} />}
	</head>
	<body>
		<Header />
		<main class="blog-container">
			<div class="blog-header">
				<h1>Latest Articles</h1>
				<p class="blog-description">
					Tutorials, guides, and insights on software development, Azure, AI, and more.
				</p>
			</div>
			
			<div class="blog-grid">
				{posts.length > 0 && (
					<div class="featured-post">
						<BlogPostPreview post={posts[0]} />
					</div>
				)}
				
				{/* Display first set of posts */}
				{posts.slice(1, 4).map((post) => (
					<div class="blog-post-item">
						<BlogPostPreview post={post} />
					</div>
				))}

				{/* Display remaining posts */}
				{posts.slice(4).map((post) => (
					<div class="blog-post-item">
						<BlogPostPreview post={post} />
					</div>
				))}
			</div>

			<Pagination currentPage={currentPage} totalPages={totalPages} />
		</main>
		<Footer />
	</body>
</html>
