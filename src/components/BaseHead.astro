---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE, AUTHOR, KEYWORDS, SITE_URL } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: string;
	article?: boolean;
	publishDate?: Date;
	modifiedDate?: Date;
	keywords?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description, 
	image = '/avatar.jpg',
	article = false,
	publishDate,
	modifiedDate,
	keywords = KEYWORDS
} = Astro.props;

const formattedTitle = title === SITE_TITLE ? title : `${title} | ${SITE_TITLE}`;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{formattedTitle}</title>
<meta name="title" content={formattedTitle} />
<meta name="description" content={description} />
<meta name="author" content={AUTHOR} />
<meta name="keywords" content={keywords} />
<meta name="robots" content="index, follow" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={formattedTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:site_name" content={SITE_TITLE} />
{article && publishDate && (
  <meta property="article:published_time" content={publishDate.toISOString()} />
)}
{article && modifiedDate && (
  <meta property="article:modified_time" content={modifiedDate.toISOString()} />
)}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@tavobarrientos" /> <!-- Replace with your Twitter handle -->
<meta name="twitter:creator" content="@tavobarrientos" /> <!-- Replace with your Twitter handle -->
<meta name="twitter:url" content={Astro.url} />
<meta name="twitter:title" content={formattedTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.url)} />

<!-- Structured Data JSON-LD -->
{article && (
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": title,
    "image": [new URL(image, Astro.url).toString()],
    "datePublished": publishDate ? publishDate.toISOString() : null,
    "dateModified": modifiedDate ? modifiedDate.toISOString() : (publishDate ? publishDate.toISOString() : null),
    "author": {
      "@type": "Person",
      "name": AUTHOR,
      "url": SITE_URL
    },
    "publisher": {
      "@type": "Organization",
      "name": SITE_TITLE,
      "logo": {
        "@type": "ImageObject",
        "url": new URL("/avatar.jpg", Astro.url).toString()
      }
    },
    "description": description
  })} />
)}

{!article && (
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "WebSite",
    "name": SITE_TITLE,
    "url": SITE_URL,
    "description": description,
    "author": {
      "@type": "Person",
      "name": AUTHOR
    }
  })} />
)}
