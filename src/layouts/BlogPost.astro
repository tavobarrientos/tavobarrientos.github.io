---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Author from '../components/Author.astro';
import RelatedPosts from '../components/RelatedPosts.astro';
import ReadingTime from '../components/ReadingTime.astro';
import SchemaOrg from '../components/SchemaOrg.astro';
import SocialShare from '../components/SocialShare.astro';
import { getReadingTime } from '../utils/readingTime';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, author, relatedPosts, showAuthor = true } = Astro.props;

// Generate keyword string from title and description
const keywords = `${title}, ${description}, blog, ${author?.id || 'tavobarrientos'}`;

// Estimate reading time based on title and description (simplified approach)
const readingTime = getReadingTime(title + " " + description);
---

<html lang="en">
	<head>
		<BaseHead 
			title={title} 
			description={description} 
			image={heroImage}
			article={true}
			publishDate={pubDate}
			modifiedDate={updatedDate}
			keywords={keywords}
		/>
		<SchemaOrg
			title={title}
			description={description}
			publishDate={pubDate}
			modifiedDate={updatedDate}
			image={heroImage}
			type="BlogPosting"
		/>
		<style>
			main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0 auto;
            }
            .hero-image {
                width: 100%;
                display: flex;
                justify-content: center;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
            }
            .prose {
                width: 720px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
                color: rgb(var(--gray-dark));
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }
            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .date {
                margin-bottom: 0.5em;
                color: rgb(var(--gray));
            }
            .last-updated-on {
                font-style: italic;
            }
            .reading-time-container {
                margin-top: 0.5em;
                display: flex;
                justify-content: center;
            }

            /* Responsive Styles */
            @media (max-width: 720px) {
                .prose {
                    width: 100%;
                    max-width: calc(100% - 2em);
                    padding: 1em;
                    margin: 0 auto;
                    box-sizing: border-box;
                }
                .title {
                    padding: 0.5em 0;
                    text-align: center;
                }
                .hero-image img {
                    width: 100%;
                    height: auto;
                }
            }

            @media (min-width: 721px) and (max-width: 1024px) {
                .prose {
                    width: 90%;
                    padding: 1em;
                    margin: 0 auto;
                    box-sizing: border-box;
                }
                .hero-image img {
                    width: 100%;
                    height: auto;
                }
            }

            @media (min-width: 1025px) {
                .prose {
                    width: 720px;
                    padding: 1em;
                    margin: 0 auto;
                }
                .hero-image img {
                    width: auto;
                    max-width: 720px;
                    height: auto;
                }
            }
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
							<div class="reading-time-container">
								<ReadingTime readingTime={readingTime} />
							</div>
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
					<SocialShare 
						url={Astro.url.toString()}
						title={title}
						description={description}
					/>
					{showAuthor && <Author author={author} />}
					<br />
					{relatedPosts && <RelatedPosts related={relatedPosts} />}
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
